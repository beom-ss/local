set.seed(10)
n<-1000
ht <- matrix(round(runif(n)),n,1)    # 0과 1 중 랜덤하게 갖는 데이터 n개 뽑기
St <- matrix(NA,n,1)
St[1]<-ht[1]
for(i in 2:1000){                    # n(1)=n(1) , n(2)=n1+n2 , n3=n1+n2+n3,  ....
St[i]<-St[i-1]+ht[i]
}
HS <- cbind(ht,St); head(HS);
Xt <- St/(1:1000)                    # 데이터의 평균값구하기.
HSX<- cbind(HS,Xt); head(HSX);
plot((1:1000),Xt,ylim=c(-0.02,1.02),xlab="number of tosses",ylab="fraction of heads")  # 평균이 0.5로 수렴하는 것을 알 수 있다.
k = c(0:20)
Lam1=0.1;
pval1=exp(-Lam1)*Lam1^k/factorial(k)
Lam2=1;
pval2=exp(-Lam2)*Lam2^k/factorial(k)
Lam3=5;
pval3=exp(-Lam3)*Lam3^k/factorial(k)
Lam4=10;
pval4=exp(-Lam4)*Lam4^k/factorial(k)
par(mfrow=c(2,2))
plot(k,pval1,main="Poisson with lamda=0.1")
plot(k,pval2,main="Poisson with lamda=1")
plot(k,pval3,main="Poisson with lamda=5")
plot(k,pval4,main="Poisson with lamda=10")
plot(pval1~k,type="l",main="Poisson with lamda=0.1")
plot(pval1~k,type="l", col=1,main="Poisson with lamda=0.1")
par(mfrow=c(2,2))
plot(pval1~k,type="l", col=1,main="Poisson with lamda=0.1")
plot(pval2~k,type="l", col=2,main="Poisson with lamda=1")
plot(pval3~k,type="l", col=3,main="Poisson with lamda=5")
plot(pval4~k,type="l", col=4,main="Poisson with lamda=10")
lines(pval2~k, col=2,main="Poisson with lamda=1")
par(mfrow=c(1,1))
par(mfrow=c(1,1))
plot(pval1~k,type="l", col=1,main="Poisson with lamda=0.1")
lines(pval2~k, col=2,main="Poisson with lamda=1")
lines(pval3~k, col=3,main="Poisson with lamda=5")
lines(pval4~k, col=4,main="Poisson with lamda=10")
library("ggplot2")
install.packages("ggplot2")
library("ggplot2")
n=500
set.seed(1)
U <- runif(n)
set.seed(2)
V <-2*pi*runif(n)-pi
R <- sqrt(-2*log(1-U))
X <- R*cos(V); 	Y <- R*sin(V);
par(mfrow=c(2,2))
plot(X,Y,xlim=c(-4,4),ylim=c(4,-4),pch=1,col="red",main="Standard Normals in the Plane")
Xsort <- sort(X)
x<-c(-400:400)/100
## xx<-seq(-4,4,0.01)
for(i in 1:801){
F[i]<-pnorm(x[i])
}
plot(x,F,cex=0.1,main="Statdard Normal CDF")
plot(Xsort,(1:n)/n,xlim=c(-4,4),ylim=c(0,1),main="Simulating Z Random Variables using Rayleigh",cex.main=1)
Sel<-c(rep(1,801),rep(2,n))
length(Sel)
data1<-rbind(cbind(x,F),cbind(Xsort,(1:n)/n))
data2<-cbind(data1,factor(Sel))
data3<-data.frame(data2)
head(data3)
attach(data3)
qplot(x,F,data=data3,colour=V3,main="Cumulative Distribution Function")
n = 5000
set.seed(33)
X1<-rnorm(mean=1,sd=2,n)
S1<-matrix(NA,n,1)
S1[1]<-X1[1]
for(i in 2:n){
S1[i]<-S1[i-1]+X1[i]
}
S1<-S1/1:n
par(mfrow=c(2,1))
plot(1:n,S1,ylim=c(-1.5,1.5),xlab="n",ylab="S1n/n",main="S1n/n for Normal distribution")
set.seed(456)
U <-runif(min=-pi/2,max=pi/2,n=n)
X2 <-tan(U)
S2 <-matrix(NA,n,1)
S2[1]<-X2[1]
for(i in 2:n){
S2[i]<-S2[i-1]+X2[i]
}
S2<-S2/1:n
plot(1:n,S2,xlab="n",ylab="S2n/n",main="S2n/n for Cauchy distribution")
setwd("D:/STAT STUDY/Mathematical Stat/data set/Chapter 2")
getwd()
dt<-read.table("sp500.csv",header=TRUE)
head(dt); dim(dt);
n=nrow(dt)
attach(dt)
Mu<-sum(Return)/n; Mu;
Sigma<-sd(Return); Sigma;
plot(Return,xlab="Days from start",ylab="Return",main="Real data from S&P500");
lines(Return,col="blue")
X<-(-400:400)/10000
Y<-pnorm(X,mean=Mu,sd=Sigma); plot(Y);
dt<-data.frame(dt)
par(mfrow=c(2,1))
plot(Rsort,(1:n)/n,col="red")
plot(X,Y)
islands  #R에 내장되어 있는 data
hist(islands)
barplot(islands)
hist(islands)
barplot(islands)
par(mfrow=c(1,1))
#barplot
islands  #R에 내장되어 있는 data
hist(islands)
barplot(islands)
runif(10)
X<-runif(10)
X
?sapply
sum(X)
X1<-runif(n)
X1
rm(X1)
X1<-runif(n)
X1
n<-10
X1<-runif(n)
X1
X1<-runif(n)
mean(X1)
X2<-runif(n)
mean(X2)
rpoi
rpois
?rpois
X1<-rpois(n,0.5); mean(X1)
X<-NA
for(i in 1:10){
X[i]<-rpois(n,0.5);
}
X
n<-10
rs<-1000
n<-10
X<-matrix(rep(99,rs*n),ncol=n)
X
for(i in 1:10){
X[,i]<-rpois(rs,0.5);
}
X
for(i in 1:10){
X[,i]<-rpois(rs,4);
}
X
head(X)
head(X,10)
colnames(X)<-paste("X",1:10)
X
head(X,10)
X$X1
X$X 1
head(X,10)
X$X 1
(X$X 1)
colnames(X)<-paste(x,1:10)
colnames(X)<-paste("x",1:10)
head(X,10)
?pasate
?paste
colnames(X)<-paste("x",(1:10))
head(X,10)
colnames(X)<-paste("x",1:10, sep="")
head(X,10)
head(X,10)
sapply
MU<-apply(X,1,sum)
MU
MU<-apply(X,2,sum)
MU
VAR<-apply(X,2,var)
VAR
?switch
require(stats)
stats
centre <- function(x, type) {
switch(type,
mean = mean(x),
median = median(x),
trimmed = mean(x, trim = .1))
}
x <- rcauchy(10)
centre(x, "mean")
centre(x, "median")
?matrix
X<-matrix(rep(99,rs*n),rs)
X
X<-matrix(rep(99,rs*n),ncol=n)
X
X<-matrix(rep(99,rs*n),ncol=n)
X
lamda<-4
X<-matrix(rpois(rs*n,lamda),ncol=n)
X
head(X,10)
MU<-apply(X,2,sum)
MU
MU<-apply(X,1,sum)
VAR<-apply(X,1,var)
MU
sample.means<-apply(X,1,sum)
sample.vars<-apply(X,1,var)
sample.vars
x <- rcauchy(10)
centre <- function(x, type) {
switch(type,
mean = mean(x),
median = median(x),
trimmed = mean(x, trim = .1))
}
centre(x, "mean")
centrep1[]
centre <- function(x, type) {
tt<-switch(type,
mean = mean(x),
median = median(x),
trimmed = mean(x, trim = .1))
}
centre(x, "mean")
centre(x,type= "mean")
sdm.sim <- function(n,src.dist=NULL,param1=NULL,param2=NULL) {
r <- 10000  # Number of replications/samples - DO NOT ADJUST
# This produces a matrix of observations with
# n columns and r rows. Each row is one sample:
my.samples <- switch(src.dist,
"E" = matrix(rexp(n*r,param1),r),
"N" = matrix(rnorm(n*r,param1,param2),r),
"U" = matrix(runif(n*r,param1,param2),r),
"P" = matrix(rpois(n*r,param1),r),
"C" = matrix(rcauchy(n*r,param1,param2),r),
"B" = matrix(rbinom(n*r,param1,param2),r),
"G" = matrix(rgamma(n*r,param1,param2),r),
"X" = matrix(rchisq(n*r,param1),r),
"T" = matrix(rt(n*r,param1),r))
all.sample.sums <- apply(my.samples,1,sum)
all.sample.means <- apply(my.samples,1,mean)
all.sample.vars <- apply(my.samples,1,var)
par(mfrow=c(2,2))
hist(my.samples[1,],col="gray",main="Distribution of One Sample")
hist(all.sample.sums,col="gray",main="Sampling Distributionnof
the Sum")
hist(all.sample.means,col="gray",main="Sampling Distributionnof the Mean")
hist(all.sample.vars,col="gray",main="Sampling Distributionnof
the Variance")
}
sdm.sim(50,src.dist="E",param1=1)
tt[1,]
x <- rcauchy(10)
centre <- function(x, type) {
tt<-switch(type,
mean = mean(x),
median = median(x),
trimmed = mean(x, trim = .1))
return(tt[1,])
}
centre(x,type= "mean")
x <- rcauchy(10)
centre <- function(x, type) {
tt<-switch(type,
mean = mean(x),
median = median(x),
trimmed = mean(x, trim = .1))
tt[1,]
}
centre(x,type= "mean")
tt<-switch(type,
mean = mean(x),
median = median(x),
trimmed = mean(x, trim = .1))
type<-NA
tt<-switch(type,
mean = mean(x),
median = median(x),
trimmed = mean(x, trim = .1))
tt
type<-rep(0,3)
tt<-switch(type,
mean = mean(x),
median = median(x),
trimmed = mean(x, trim = .1))
sdm.sim(10,src.dist="E",1)
sdm.sim(50,src.dist="E",1)
sdm.sim(100,src.dist="E",1)
sdm.sim(10,src.dist="X",14)
sdm.sim(50,src.dist="X",14)
sdm.sim(100,src.dist="X",14)
sdm.sim(10,src.dist="N",param1=20,param2=3)
sdm.sim(50,src.dist="N",param1=20,param2=3)
sdm.sim(100,src.dist="N",param1=20,param2=3)
sdm.sim(10,src.dist="G",param1=5,param2=5)
sdm.sim(50,src.dist="G",param1=5,param2=5)
sdm.sim(100,src.dist="G",param1=5,param2=5)
hist(X,col="gray",main="Distribution of One Sample")
sample.sums<-apply(X,1,sum)
sample.sums<-apply(X,1,sum)
sample.means<-apply(X,1,mean)
sample.vars<-apply(X,1,var)
hist(sample.sums,col="gray",main="Sampling Distributionnof
the Sum")
hist(sample.means,col="gray",main="Sampling Distributionnof the Mean")
hist(sample.vars,col="gray",main="Sampling Distributionnof
the Variance")
rs<-1000
n<-1000
lamda<-4
X<-matrix(rpois(rs*n,lamda),ncol=n)
head(X,10)
sample.sums<-apply(X,1,sum)
sample.means<-apply(X,1,mean)
sample.vars<-apply(X,1,var)
hist(X,col="gray",main="Distribution of One Sample")
hist(sample.sums,col="gray",main="Sampling Distributionnof
the Sum")
hist(sample.means,col="gray",main="Sampling Distributionnof the Mean")
hist(sample.vars,col="gray",main="Sampling Distributionnof
the Variance")
rs<-1000
n<-10
lamda<-4
X<-matrix(rpois(rs*n,lamda),ncol=n)
head(X,10)
sample.sums<-apply(X,1,sum)
sample.means<-apply(X,1,mean)
sample.vars<-apply(X,1,var)
hist(X,col="gray",main="Distribution of One Sample")
hist(sample.sums,col="gray",main="Sampling Distributionnof
the Sum")
hist(sample.means,col="gray",main="Sampling Distributionnof the Mean")
hist(sample.vars,col="gray",main="Sampling Distributionnof
the Variance")
rs<-10000
n<-10
lamda<-4
X<-matrix(rpois(rs*n,lamda),ncol=n)
head(X,10)
sample.sums<-apply(X,1,sum)
sample.means<-apply(X,1,mean)
sample.vars<-apply(X,1,var)
hist(X,col="gray",main="Distribution of One Sample")
hist(sample.sums,col="gray",main="Sampling Distributionnof
the Sum")
hist(sample.means,col="gray",main="Sampling Distributionnof the Mean")
hist(sample.vars,col="gray",main="Sampling Distributionnof
the Variance")
sdm.sim(50,src.dist="E",param1=1)
sdm.sim(50,src.dist="E",1)
sdm.sim(50,src.dist="E",param1=1)
sdm.sim(50,src.dist="E",1)
sdm.sim(50,src.dist="E",param1=1)
sdm.sim(50,src.dist="E",param1=1)
sdm.sim(10,src.dist="E",1)
sdm.sim(50,src.dist="E",1)
sdm.sim(100,src.dist="E",1)
sdm.sim(10,src.dist="E",1)
sdm.sim(100,src.dist="E",1)
centre <- function(x, type) {
switch(type,
mean = mean(x),
median = median(x),
trimmed = mean(x, trim = .1))
}
centre <- function(x, type) {
dd<-switch(type,
mean = mean(x),
median = median(x),
trimmed = mean(x, trim = .1))
}
x <- rcauchy(10)
centre <- function(x, type) {
dd<-switch(type,
mean = mean(x),
median = median(x),
trimmed = mean(x, trim = .1))
hist(dd[1,],col="gray",main="Distribution of One Sample")
}
centre(x, "mean")
barplot(islands)
par(mfrow=c(1,1))
barplot(islands)
hist(islands)
barplot(islands,mains=Bar plot)
barplot(islands,mains="Bar plot")
barplot(islands,main="Bar plot")
par(mfrow=c(1,2))
boxplot(salary ~ sex, data=dat01)
par(mfrow=c(1,2))
boxplot(salary ~ sex, data=dat01)
dat01$job<-as.factor(dat01$job)
dat01$racial<-as.factor(dat01$racial)
str(dat01)
summary(dat01)
dat01<-read.csv("employment.csv",header=T)
head(dat01)
str(dat01)
dat01$job<-as.factor(dat01$job)
dat01$racial<-as.factor(dat01$racial)
str(dat01)
summary(dat01)
setwd("D:/실계실/2016/2주차")    #data가 있는 폴더경로
## data 불러오기
dat01<-read.csv("employment.csv",header=T)
head(dat01)
## Exploring data analysis
str(dat01)
#data유형 바꿔주기
dat01$job<-as.factor(dat01$job)
dat01$racial<-as.factor(dat01$racial)
str(dat01)
summary(dat01)
par(mfrow=c(1,2))
boxplot(salary ~ sex, data=dat01)
par(mfrow=c(1,1))
boxplot(salary ~ sex, data=dat01)
